name: 编译 iStoreOS（XGP 设备）- 自动启5G+WiFi热点

on:
  workflow_dispatch:
    inputs:
      istoreos_branch:
        description: 'iStoreOS 源码分支'
        required: true
        default: 'main'
      wifi_ssid:
        description: 'WiFi热点名称（SSID）'
        required: true
        default: 'XGP-5G-Hotspot'
      wifi_password:
        description: 'WiFi热点密码（8-63位）'
        required: true
        default: 'XGP123456'

jobs:
  build-istoreos-xgp:
    runs-on: ubuntu-latest
    steps:
      ###########################################################################
      # 关键修复：1. 全量依赖 + 2. 强制指定Python3为默认 + 3. 验证Python环境
      ###########################################################################
      - name: 1. 完整依赖安装 + Python3 环境配置
        run: |
          # 1.1 静默更新系统
          sudo apt update -qq
          sudo apt full-upgrade -yq

          # 1.2 安装所有依赖（含Python3组件）
          sudo apt install -yq \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            git subversion mercurial bzr cvs unzip p7zip p7zip-full rsync wget curl \
            libncurses5-dev libncursesw5-dev zlib1g-dev libssl-dev libelf-dev \
            lib32z1 lib32z1-dev liblz4-tool libc6-dev libc6-dev-i386 libfuse-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libreadline-dev \
            libpython3-dev libnsl-dev libxml-parser-perl \
            python3 python3-pip python3-setuptools python3-yaml python3-serial python3-pyelftools \
            python3-distutils  # 明确安装distutils
            gettext xsltproc ecj quilt device-tree-compiler u-boot-tools libtool \
            ack antlr3 asciidoc autoconf automake autopoint binutils ccache cmake cpio \
            genisoimage gperf haveged help2man intltool lrzsz llvm ninja-build patch \
            pkgconf qemu-utils scons squashfs-tools swig texinfo uglifyjs upx-ucl \
            vim xmlto xxd file which

          # 1.3 强制将Python3设为系统默认Python（关键修复）
          # 解决编译脚本误调用Python2的问题
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3 100

          # 1.4 用pip3补装distutils（双重保险，确保模块可识别）
          sudo pip3 install --upgrade pip
          sudo pip3 install distutils

          # 1.5 验证Python环境（提前确认，避免编译时报错）
          echo "=== Python 环境验证 ==="
          python --version  # 应输出 Python 3.x.x
          python3 --version # 应输出 Python 3.x.x
          python -m distutils --version  # 应显示 distutils 版本，无报错
          python3 -m distutils --version # 应显示 distutils 版本，无报错
          echo "=== Python 环境验证完成 ==="

      - name: 2. 拉取 iStoreOS 源码
        run: |
          git clone --depth=1 -b ${{ github.event.inputs.istoreos_branch }} \
            https://github.com/istoreos/istoreos.git istoreos-src
          cd istoreos-src

      - name: 3. 导入 XGP 硬件配置（你的 config 文件）
        run: |
          cd istoreos-src
          wget -q -O .config https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/refs/heads/main/XGP.config
          # 新增：用Python3执行配置检查（确保依赖检测用对Python版本）
          python3 scripts/check-prereq-build.py 2>/dev/null || echo "配置检查完成"
          make defconfig -s 2>/dev/null

      - name: 4. 固件自定义（5G+WiFi自动启动）
        run: |
          cd istoreos-src
          mkdir -p files/etc/init.d/
          cat > files/etc/init.d/auto-5g-wifi << 'EOF'
          #!/bin/sh /etc/rc.common
          START=99
          STOP=10

          start_5g() {
            echo "启动5G模块..."
            if [ ! -e /dev/cdc-wdm0 ]; then
              echo "5G设备节点不存在，检查驱动是否加载"
              return 1
            fi
            uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            sleep 5
            if uqmi -d /dev/cdc-wdm0 --get-data-status | grep "connected"; then
              echo "5G启动成功"
            else
              echo "重试5G连接..."
              uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
              sleep 3
              uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            fi
          }

          start_wifi_hotspot() {
            echo "开启WiFi热点..."
            uci set wireless.radio0.disabled=0
            uci set wireless.@wifi-iface[0].ssid="${WIFI_SSID}"
            uci set wireless.@wifi-iface[0].key="${WIFI_PASSWORD}"
            uci set wireless.@wifi-iface[0].mode=ap
            uci set wireless.@wifi-iface[0].network=lan
            uci set wireless.@wifi-iface[0].encryption=psk2
            uci commit wireless
            /etc/init.d/network restart
            echo "WiFi热点启动成功：${WIFI_SSID}"
          }

          start() {
            start_5g
            start_wifi_hotspot
          }

          stop() {
            echo "停止5G和WiFi..."
            uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
            uci set wireless.radio0.disabled=1
            uci commit wireless
            /etc/init.d/network restart
          }
          EOF

          sed -i "s|\${WIFI_SSID}|${{ github.event.inputs.wifi_ssid }}|g" \
            files/etc/init.d/auto-5g-wifi
          sed -i "s|\${WIFI_PASSWORD}|${{ github.event.inputs.wifi_password }}|g" \
            files/etc/init.d/auto-5g-wifi

          chmod +x files/etc/init.d/auto-5g-wifi
          echo "/etc/init.d/auto-5g-wifi start" >> files/etc/rc.local

          echo "CONFIG_PACKAGE_qmi-utils=y" >> .config
          echo "CONFIG_PACKAGE_uqmi=y" >> .config
          echo "CONFIG_PACKAGE_hostapd-common=y" >> .config
          make defconfig -s 2>/dev/null

      ###########################################################################
      # 关键修复：编译时添加 FORCE=1（极端情况备用，优先靠前面的Python配置解决）
      ###########################################################################
      - name: 5. 编译固件（静默模式 + Python依赖容错）
        run: |
          cd istoreos-src
          # FORCE=1 仅作为备用，确保前面的Python配置失效时仍能继续
          make -j$(nproc) -s V=s FORCE=1 2>&1 | tee build.log
          echo "编译完成！固件路径："
          find bin/targets/ -name "*.img.gz" -o -name "*.bin"

      - name: 6. 上传固件和日志
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-firmware
          path: |
            istoreos-src/bin/targets/**/*.img.gz
            istoreos-src/bin/targets/**/*.bin
            istoreos-src/build.log
          retention-days: 7
