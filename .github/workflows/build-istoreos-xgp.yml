name: 编译 iStoreOS（XGP 设备）- 自动启5G+WiFi热点

on:
  workflow_dispatch:
    inputs:
      istoreos_branch:
        description: 'iStoreOS 源码分支'
        required: true
        default: 'main'
      wifi_ssid:
        description: 'WiFi热点名称（SSID）'
        required: true
        default: 'XGP-5G-Hotspot'
      wifi_password:
        description: 'WiFi热点密码（8-63位）'
        required: true
        default: 'XGP123456'

jobs:
  build-istoreos-xgp:
    runs-on: ubuntu-latest
    steps:
      ###########################################################################
      # 核心：整合所有依赖包，静默安装（减少日志）
      ###########################################################################
      - name: 1. 完整依赖安装（含系统更新）
        run: |
          # 静默更新系统（-qq 减少日志，-y 自动确认）
          sudo apt update -qq
          sudo apt full-upgrade -yq
          
          # 安装所有指定依赖包（去重整合，-yq 自动确认）
          sudo apt install -yq \
            # 基础编译工具
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            # 版本控制与文件处理
            git subversion mercurial bzr cvs unzip p7zip p7zip-full rsync wget curl \
            # 库文件与开发依赖
            libncurses5-dev libncursesw5-dev zlib1g-dev libssl-dev libelf-dev \
            lib32z1 lib32z1-dev liblz4-tool libc6-dev libc6-dev-i386 libfuse-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libreadline-dev \
            libpython3-dev libnsl-dev libxml-parser-perl \
            # Python 相关
            python3 python3-pip python3-setuptools python3-yaml python3-serial python3-pyelftools \
            # 工具类
            gettext xsltproc ecj quilt device-tree-compiler u-boot-tools libtool \
            ack antlr3 asciidoc autoconf automake autopoint binutils ccache cmake cpio \
            genisoimage gperf haveged help2man intltool lrzsz llvm ninja-build patch \
            pkgconf qemu-utils scons squashfs-tools swig texinfo uglifyjs upx-ucl \
            vim xmlto xxd file which
          
          # 验证关键依赖（可选，快速确认环境）
          echo "Python3 版本：$(python3 --version)"
          echo "GCC 版本：$(gcc --version | head -1)"
          echo "依赖安装完成"

      - name: 2. 拉取 iStoreOS 源码
        run: |
          git clone --depth=1 -b ${{ github.event.inputs.istoreos_branch }} \
            https://github.com/istoreos/istoreos.git istoreos-src
          cd istoreos-src

      - name: 3. 导入 XGP 硬件配置（你的 config 文件）
        run: |
          cd istoreos-src
          wget -q -O .config https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/refs/heads/main/XGP.config
          make defconfig -s 2>/dev/null

      - name: 4. 固件自定义（5G+WiFi自动启动）
        run: |
          cd istoreos-src
          mkdir -p files/etc/init.d/
          cat > files/etc/init.d/auto-5g-wifi << 'EOF'
          #!/bin/sh /etc/rc.common
          START=99
          STOP=10

          start_5g() {
            echo "启动5G模块..."
            if [ ! -e /dev/cdc-wdm0 ]; then
              echo "5G设备节点不存在，检查驱动是否加载"
              return 1
            fi
            # 按运营商修改APN（移动cmnet/联通3gnet/电信ctnet）
            uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            sleep 5
            if uqmi -d /dev/cdc-wdm0 --get-data-status | grep "connected"; then
              echo "5G启动成功"
            else
              echo "重试5G连接..."
              uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
              sleep 3
              uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            fi
          }

          start_wifi_hotspot() {
            echo "开启WiFi热点..."
            # 若XGP WiFi为5G频段，需将radio0改为radio1（需实际验证）
            uci set wireless.radio0.disabled=0
            uci set wireless.@wifi-iface[0].ssid="${WIFI_SSID}"
            uci set wireless.@wifi-iface[0].key="${WIFI_PASSWORD}"
            uci set wireless.@wifi-iface[0].mode=ap
            uci set wireless.@wifi-iface[0].network=lan
            uci set wireless.@wifi-iface[0].encryption=psk2
            uci commit wireless
            /etc/init.d/network restart
            echo "WiFi热点启动成功：${WIFI_SSID}"
          }

          start() {
            start_5g
            start_wifi_hotspot
          }

          stop() {
            echo "停止5G和WiFi..."
            uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
            uci set wireless.radio0.disabled=1
            uci commit wireless
            /etc/init.d/network restart
          }
          EOF

          # 注入WiFi参数
          sed -i "s|\${WIFI_SSID}|${{ github.event.inputs.wifi_ssid }}|g" \
            files/etc/init.d/auto-5g-wifi
          sed -i "s|\${WIFI_PASSWORD}|${{ github.event.inputs.wifi_password }}|g" \
            files/etc/init.d/auto-5g-wifi

          # 配置开机启动
          chmod +x files/etc/init.d/auto-5g-wifi
          echo "/etc/init.d/auto-5g-wifi start" >> files/etc/rc.local

          # 确保5G/WiFi依赖包编译进固件
          echo "CONFIG_PACKAGE_qmi-utils=y" >> .config
          echo "CONFIG_PACKAGE_uqmi=y" >> .config
          echo "CONFIG_PACKAGE_hostapd-common=y" >> .config
          make defconfig -s 2>/dev/null

      - name: 5. 编译固件（静默模式，减少日志）
        run: |
          cd istoreos-src
          # -s 静默编译，V=s 仅输出错误，日志定向到文件
          make -j$(nproc) -s V=s 2>&1 | tee build.log
          # 输出固件路径，方便确认
          echo "编译完成！固件路径："
          find bin/targets/ -name "*.img.gz" -o -name "*.bin"

      - name: 6. 上传固件和日志
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-firmware
          path: |
            istoreos-src/bin/targets/**/*.img.gz
            istoreos-src/bin/targets/**/*.bin
            istoreos-src/build.log
          retention-days: 7
