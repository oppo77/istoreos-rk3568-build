name: 编译 iStoreOS（XGP 设备）- 自动启5G+WiFi热点

on:
  workflow_dispatch:
    inputs:
      istoreos_branch:
        description: 'iStoreOS 源码分支'
        required: true
        default: 'main'
      wifi_ssid:
        description: 'WiFi热点名称（SSID）'
        required: true
        default: 'XGP-5G-Hotspot'
      wifi_password:
        description: 'WiFi热点密码（8-63位）'
        required: true
        default: 'XGP123456'

jobs:
  build-istoreos-xgp:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 安装编译依赖（静默模式）
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yq \
            git gcc g++ make libncurses5-dev libz-dev libssl-dev \
            python3 python3-pip unzip wget curl file subversion \
            flex bison bc dwarves rsync libelf-dev

      - name: 2. 拉取 iStoreOS 源码
        run: |
          git clone --depth=1 -b ${{ github.event.inputs.istoreos_branch }} \
            https://github.com/istoreos/istoreos.git istoreos-src
          cd istoreos-src

      - name: 3. 导入 XGP 硬件配置（使用你的 config 文件）
        run: |
          cd istoreos-src
          # 替换为你的 XGP.config 链接
          wget -q -O .config https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/refs/heads/main/XGP.config
          # 静默修复配置依赖
          make defconfig -s 2>/dev/null

      - name: 4. 固件自定义（5G+WiFi自动启动）
        run: |
          cd istoreos-src
          # 创建自启动脚本
          mkdir -p files/etc/init.d/
          cat > files/etc/init.d/auto-5g-wifi << 'EOF'
          #!/bin/sh /etc/rc.common
          START=99
          STOP=10

          start_5g() {
            echo "启动5G模块..."
            # 适配XGP设备的5G启动逻辑（需根据实际模块调整）
            if [ ! -e /dev/cdc-wdm0 ]; then
              echo "5G设备节点不存在，检查驱动是否加载"
              return 1
            fi
            # APN根据运营商修改（移动cmnet/联通3gnet/电信ctnet）
            uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            sleep 5
            if uqmi -d /dev/cdc-wdm0 --get-data-status | grep "connected"; then
              echo "5G启动成功"
            else
              echo "重试5G连接..."
              uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
              sleep 3
              uqmi -d /dev/cdc-wdm0 --start-network cmnet --autoconnect
            fi
          }

          start_wifi_hotspot() {
            echo "开启WiFi热点..."
            # 启用WiFi（XGP的WiFi节点可能为radio0/radio1，需验证）
            uci set wireless.radio0.disabled=0
            # 配置热点参数
            uci set wireless.@wifi-iface[0].ssid="${WIFI_SSID}"
            uci set wireless.@wifi-iface[0].key="${WIFI_PASSWORD}"
            uci set wireless.@wifi-iface[0].mode=ap
            uci set wireless.@wifi-iface[0].network=lan
            uci set wireless.@wifi-iface[0].encryption=psk2
            uci commit wireless
            /etc/init.d/network restart
            echo "WiFi热点启动成功：${WIFI_SSID}"
          }

          start() {
            start_5g
            start_wifi_hotspot
          }

          stop() {
            echo "停止5G和WiFi..."
            uqmi -d /dev/cdc-wdm0 --stop-network --autoconnect
            uci set wireless.radio0.disabled=1
            uci commit wireless
            /etc/init.d/network restart
          }
          EOF

          # 注入WiFi参数
          sed -i "s|\${WIFI_SSID}|${{ github.event.inputs.wifi_ssid }}|g" \
            files/etc/init.d/auto-5g-wifi
          sed -i "s|\${WIFI_PASSWORD}|${{ github.event.inputs.wifi_password }}|g" \
            files/etc/init.d/auto-5g-wifi

          # 配置开机启动
          chmod +x files/etc/init.d/auto-5g-wifi
          echo "/etc/init.d/auto-5g-wifi start" >> files/etc/rc.local

          # 确保依赖包被编译（根据XGP.config补充）
          echo "CONFIG_PACKAGE_qmi-utils=y" >> .config
          echo "CONFIG_PACKAGE_uqmi=y" >> .config
          echo "CONFIG_PACKAGE_hostapd-common=y" >> .config
          make defconfig -s 2>/dev/null

      - name: 5. 编译固件（静默模式，减少日志）
        run: |
          cd istoreos-src
          # 静默编译，仅输出关键错误
          make -j$(nproc) -s V=s 2>&1 | tee build.log
          # 显示固件路径
          echo "固件路径："
          find bin/targets/ -name "*.img.gz" -o -name "*.bin"

      - name: 6. 上传固件和日志
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-firmware
          path: |
            istoreos-src/bin/targets/**/*.img.gz
            istoreos-src/bin/targets/**/*.bin
            istoreos-src/build.log
          retention-days: 7
