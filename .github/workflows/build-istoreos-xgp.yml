name: iStoreOS-xgp-AutoBuild

on:
  workflow_dispatch:
    inputs:
      lan_ip:
        description: '路由器管理IP（LAN地址）'
        required: true
        default: '192.168.10.1'
      wifi_2g_ssid:
        description: '2.4G WiFi热点名称'
        required: true
        default: 'xgp-WiFi-2.4G'
      wifi_5g_ssid:
        description: '5G WiFi热点名称'
        required: true
        default: 'xgp-WiFi-5G'
      wifi_password:
        description: 'WiFi密码（8-63位）'
        required: true
        default: 'xgp123456'
      apn_5g:
        description: '5G模块APN（移动cmnet/联通3gnet/电信ctnet）'
        required: true
        default: 'cmnet'

permissions:
  contents: read
  packages: read

jobs:
  build_xgp:
    name: Build iStoreOS for xgp (RK35xx)
    runs-on: ubuntu-22.04
    steps:
      - name: 清理空间与安装依赖（含多线程下载工具）
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q 2>/dev/null` || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android
          sudo apt-get update -qq
          sudo apt-get -y purge azure-cli* docker* ghc* zulu* llvm* firefox google*
          # 额外安装多线程下载工具axel
          sudo apt-get -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 python3-pip rsync subversion swig unzip zlib1g-dev device-tree-compiler liblz4-tool curl wget axel
          sudo pip3 install pyelftools
          sudo apt-get -y autoremove --purge
          sudo apt-get clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 释放更多磁盘空间
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          large-packages: true
          swap-storage: true

      - name: 拉取外部配置文件
        uses: actions/checkout@v4
        with:
          path: config-repo
          fetch-depth: 1

      - name: 克隆iStoreOS源码
        uses: actions/checkout@v4
        with:
          repository: istoreos/istoreos
          ref: istoreos-24.10
          path: openwrt
          fetch-depth: 1

      - name: 配置多镜像源冗余（加速make download）
        run: |
          cd openwrt
          # 替换OpenWrt官方源为多镜像冗余（国外服务器访问国内/国际镜像均优）
          # 顺序：清华（国内）→ 中科大（国内）→ 官方（国际）
          sed -i 's#downloads.openwrt.org#mirrors.tuna.tsinghua.edu.cn/openwrt\|mirrors.ustc.edu.cn/openwrt\|downloads.openwrt.org#g' ./feeds.conf.default
          # 替换package源码中的下载链接（覆盖更多包）
          find ./package -type f -name "Makefile" -exec sed -i 's#https://downloads.openwrt.org#https://mirrors.tuna.tsinghua.edu.cn/openwrt#g' {} \;
          find ./package -type f -name "Makefile" -exec sed -i 's#http://downloads.openwrt.org#https://mirrors.tuna.tsinghua.edu.cn/openwrt#g' {} \;

      - name: 替换下载工具为多线程axel（核心加速）
        run: |
          cd openwrt
          # 修改OpenWrt下载脚本，用axel替代wget（支持多线程）
          sudo sed -i 's/^WGET_CMD.*/WGET_CMD = axel -n 16 -a -o $(DL_DIR)\/\$(FILE) $(URL)/' ./include/download.mk
          # 增加超时和重试机制
          echo "DOWNLOAD_TIMEOUT=600" >> ./include/download.mk  # 超时10分钟
          echo "DOWNLOAD_RETRIES=5" >> ./include/download.mk     # 重试5次

      - name: 初始化feeds并删除问题包
        run: |
          cd openwrt
          ./scripts/feeds update -a
          if [ -d "feeds/third/luci-app-baidupcs-web" ]; then
            rm -rf feeds/third/luci-app-baidupcs-web
            echo "已删除feeds/third中的luci-app-baidupcs-web"
          fi
          if [ -d "package/feeds/third/luci-app-baidupcs-web" ]; then
            rm -rf package/feeds/third/luci-app-baidupcs-web
            echo "已删除package/feeds/third中的luci-app-baidupcs-web"
          fi
          rm -rf feeds/third/baidupcs-web 2>/dev/null || true
          rm -rf package/feeds/third/baidupcs-web 2>/dev/null || true
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 下载xgp设备配置文件
        run: |
          cd openwrt
          wget --timeout=30 --tries=3 -O .config "https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/refs/heads/main/xgp.config"
          [ -s .config ] || { echo "Error: xgp.config is empty!"; exit 1; }
          make defconfig

      - name: 缓存已下载的依赖包（dl目录）
        uses: actions/cache@v3
        with:
          path: openwrt/dl
          key: ${{ runner.os }}-xgp-dl-${{ hashFiles('openwrt/.config') }}
          restore-keys: |
            ${{ runner.os }}-xgp-dl-

      - name: 多线程加速下载依赖包（make download）
        run: |
          cd openwrt
          echo "使用16线程axel加速下载依赖包..."
          make download -j16  # 配合axel的16线程，最大化带宽利用
          # 清理损坏的小文件（避免编译失败）
          find dl -size -1024c -exec rm -f {} \;
          # 检查是否有未下载成功的包，手动重试
          for file in $(cat dl/.downloaded); do
            if [ ! -f "dl/$file" ]; then
              echo "重新下载缺失的包: $file"
              make download V=s | grep "$file"  # 单独重试缺失包
            fi
          done

      - name: 引入5G启动脚本并替换变量
        run: |
          mkdir -p openwrt/files/etc/init.d/
          cp config-repo/config-files/5g-auto openwrt/files/etc/init.d/
          sed -i "s/__5G_APN__/${{ github.event.inputs.apn_5g }}/g" openwrt/files/etc/init.d/5g-auto
          chmod 755 openwrt/files/etc/init.d/5g-auto
          mkdir -p openwrt/files/etc/rc.d/
          ln -sf ../init.d/5g-auto openwrt/files/etc/rc.d/S955g-auto

      - name: 引入WiFi配置并替换变量
        run: |
          mkdir -p openwrt/files/etc/config/
          cp config-repo/config-files/wireless openwrt/files/etc/config/
          sed -i "s/__WIFI_2G_SSID__/${{ github.event.inputs.wifi_2g_ssid }}/g" openwrt/files/etc/config/wireless
          sed -i "s/__WIFI_5G_SSID__/${{ github.event.inputs.wifi_5g_ssid }}/g" openwrt/files/etc/config/wireless
          sed -i "s/__WIFI_PASSWORD__/${{ github.event.inputs.wifi_password }}/g" openwrt/files/etc/config/wireless

      - name: 设置LAN管理IP
        run: |
          cd openwrt
          sed -i "s/192\.168\.[0-9]*\.[0-9]*/${{ github.event.inputs.lan_ip }}/g" package/base-files/files/bin/config_generate

      - name: 缓存工具链（加速二次编译）
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          mixkey: ${{ runner.os }}-xgp-24.10
          prefix: ${{ github.workspace }}/openwrt

      - name: 编译固件（优化线程数）
        run: |
          cd openwrt
          echo "使用2线程编译（平衡速度与稳定性）"
          make -j2 || make -j1 V=s

      - name: 整理固件产物
        run: |
          mkdir -p ./final-firmware
          cp -rf openwrt/bin/targets/rockchip/armv8/* ./final-firmware/
          rm -rf ./final-firmware/packages

      - name: 上传固件到Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iStoreOS-xgp-Firmware-${{ github.run_id }}
          path: ./final-firmware/
