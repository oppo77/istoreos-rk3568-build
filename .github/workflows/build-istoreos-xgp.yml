name: iStoreOS-xgp-AutoBuild

on:
  workflow_dispatch:
    inputs:
      lan_ip:
        description: '路由器管理IP（LAN地址）'
        required: true
        default: '192.168.10.1'
      wifi_2g_ssid:
        description: '2.4G WiFi热点名称'
        required: true
        default: 'xgp-WiFi-2.4G'
      wifi_5g_ssid:
        description: '5G WiFi热点名称'
        required: true
        default: 'xgp-WiFi-5G'
      wifi_password:
        description: 'WiFi密码（8-63位）'
        required: true
        default: 'xgp123456'
      5g_apn:
        description: '5G模块APN（移动cmnet/联通3gnet/电信ctnet）'
        required: true
        default: 'cmnet'

permissions:
  contents: read
  packages: read

jobs:
  build_xgp:
    name: Build iStoreOS for xgp (RK35xx)
    runs-on: ubuntu-22.04
    steps:
      - name: Clean space & Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q 2>/dev/null` || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android
          sudo apt update -qq
          sudo apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google*
          sudo apt -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 python3-pip rsync subversion swig unzip zlib1g-dev device-tree-compiler liblz4-tool curl wget
          sudo pip3 install pyelftools
          sudo apt autoremove --purge -y
          sudo apt clean -y
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          large-packages: true
          swap-storage: true

      - name: Checkout config files (分离的配置文件)
        uses: actions/checkout@v4
        with:
          path: config-repo  # 拉取包含config-files的仓库到config-repo目录
          fetch-depth: 1

      - name: Clone iStoreOS source
        uses: actions/checkout@v4
        with:
          repository: istoreos/istoreos
          ref: istoreos-24.10
          path: openwrt
          fetch-depth: 1

      - name: Download xgp.config
        run: |
          cd openwrt
          wget --timeout=30 --tries=3 -O .config "https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/refs/heads/main/xgp.config"
          [ -s .config ] || { echo "Error: xgp.config is empty!"; exit 1; }
          echo "✅ xgp.config downloaded successfully"

      - name: 引入5G启动脚本并替换变量
        run: |
          # 创建目标目录
          mkdir -p openwrt/files/etc/init.d/
          # 复制外部5G脚本到源码目录
          cp config-repo/config-files/5g-auto openwrt/files/etc/init.d/
          # 替换脚本中的APN占位符
          sed -i "s/__5G_APN__/${{ github.event.inputs.5g_apn }}/g" openwrt/files/etc/init.d/5g-auto
          # 设置权限+开机启动
          chmod 755 openwrt/files/etc/init.d/5g-auto
          mkdir -p openwrt/files/etc/rc.d/
          ln -sf ../init.d/5g-auto openwrt/files/etc/rc.d/S955g-auto

      - name: 引入WiFi配置并替换变量
        run: |
          # 创建目标目录
          mkdir -p openwrt/files/etc/config/
          # 复制外部WiFi配置到源码目录
          cp config-repo/config-files/wireless openwrt/files/etc/config/
          # 替换WiFi配置中的占位符
          sed -i "s/__WIFI_2G_SSID__/${{ github.event.inputs.wifi_2g_ssid }}/g" openwrt/files/etc/config/wireless
          sed -i "s/__WIFI_5G_SSID__/${{ github.event.inputs.wifi_5g_ssid }}/g" openwrt/files/etc/config/wireless
          sed -i "s/__WIFI_PASSWORD__/${{ github.event.inputs.wifi_password }}/g" openwrt/files/etc/config/wireless

      - name: Set LAN IP address
        run: |
          cd openwrt
          sed -i "s/192\.168\.[0-9]*\.[0-9]*/${{ github.event.inputs.lan_ip }}/g" package/base-files/files/bin/config_generate
          echo "✅ LAN IP set to ${{ github.event.inputs.lan_ip }}"

      - name: Update & install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate config & Download packages
        run: |
          cd openwrt
          make defconfig
          make download -j16
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt
          echo "✅ Starting compile with $(nproc) threads"
          make -j$(nproc) || make -j1 V=s
          echo -e "\n✅ Firmware directory size:"
          du -h --max-depth=1 ./bin/targets/rockchip/armv8/

      - name: Organize firmware
        run: |
          mkdir -p ./final-firmware
          cp -rf openwrt/bin/targets/rockchip/armv8/* ./final-firmware/
          rm -rf ./final-firmware/packages

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: iStoreOS-xgp-Firmware-${{ github.run_id }}
          path: ./final-firmware/
