name: 编译iStoreOS-XGP（最新版+QModem5G）

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/build-istoreos-xgp.yml'
      - 'xgp-qmodem.config'
      - 'files/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: rockchip
      TARGET_SUBPLATFORM: rk35xx
      FIRMWARE_DIST: istoreos

    steps:
      - name: 1. 拉取仓库代码
        uses: actions/checkout@v4

      - name: 2. 更换源+安装【OpenWRT最新版完整依赖】
        run: |
          # 更换阿里云源，确保包同步完整
          sudo sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
          sudo sed -i s@/security.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
          sudo apt clean && sudo apt update -y

          # 安装OpenWRT 24.03+（iStoreOS最新版基于此）官方强制依赖
          # 新增：meson/ninja/cmake（最新版编译现代组件必需）
          sudo apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev \
            libtool autoconf automake pkg-config perl python3 python3-pip \
            python3-setuptools python3-yaml rsync subversion unzip wget \
            zlib1g-dev quilt libc6-dev-i386 u-boot-tools dosfstools mtools parted \
            dwarves bc liblz4-tool meson ninja-build cmake  # 新增关键依赖

          # 验证核心工具（覆盖最新版可能用到的）
          REQUIRED_TOOLS="xz gcc g++ make python3 rsync wget unzip meson ninja cmake"
          for tool in $REQUIRED_TOOLS; do
            if ! command -v $tool &> /dev/null; then
              echo "ERROR: 最新版依赖 $tool 未安装！请手动检查apt源"
              exit 1
            fi
          done
          echo "最新版依赖检查通过"

      - name: 3. 克隆iStoreOS最新源码
        run: |
          git clone https://github.com/istoreos/istoreos.git $FIRMWARE_DIST
          cd $FIRMWARE_DIST
          git pull  # 确保拉取最新提交
          echo "当前源码commit：$(git rev-parse --short HEAD)"

      - name: 4. 同步软件源（含QModem）
        run: |
          cd $FIRMWARE_DIST
          echo "src-git qmodem https://github.com/FUjr/QModem.git" >> feeds.conf.default
          ./scripts/feeds update -a  # 不静默，显示源同步日志
          ./scripts/feeds install -a -f  # 强制安装，解决依赖冲突

      - name: 5. 导入配置文件
        run: |
          cd $FIRMWARE_DIST
          CONFIG_URL="https://raw.githubusercontent.com/oppo77/istoreos-rk3568-build/main/xgp-qmodem.config"
          wget --no-check-certificate -O .config "$CONFIG_URL" || exit 1
          make defconfig  # 补全新增配置项
          # 验证平台和QModem配置
          grep -q "CONFIG_TARGET_rockchip=y" .config || exit 1
          grep -q "CONFIG_PACKAGE_luci-app-qmodem=y" .config || exit 1

      - name: 6. 前置检查（显示具体缺失工具）
        run: |
          cd $FIRMWARE_DIST
          # 执行前置检查并捕获输出，筛选缺失的依赖
          if ! make prereq V=99 2>&1 | tee prereq.log; then
            echo "ERROR: 前置检查失败，缺失的依赖如下："
            # 从日志中提取"missing"关键字对应的工具
            grep "missing" prereq.log || echo "未明确显示缺失工具，请查看完整日志"
            exit 1
          fi

      - name: 7. 编译固件
        run: |
          cd $FIRMWARE_DIST
          make -j1 V=s 2>&1 | tee build.log
          FIRMWARE_DIR="bin/targets/$TARGET_PLATFORM/$TARGET_SUBPLATFORM"
          [ -d "$FIRMWARE_DIR" ] && [ -n "$(ls $FIRMWARE_DIR/*.sysupgrade.bin 2>/dev/null)" ] || {
            cat build.log | tail -500
            exit 1
          }

      - name: 8. 打包并上传产物
        run: |
          cd $FIRMWARE_DIST
          mkdir -p output
          cp $FIRMWARE_DIR/*.sysupgrade.bin output/
          cp $FIRMWARE_DIR/*.factory.img output/ 2>/dev/null
          cp .config output/final_config.config
          cp build.log output/build_log.txt
          cp prereq.log output/prereq_check.log  # 保存前置检查日志

      - name: 9. 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-latest-xgp-firmware
          path: ${{ env.FIRMWARE_DIST }}/output/
          retention-days: 30
