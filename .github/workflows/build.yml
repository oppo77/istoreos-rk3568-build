name: Build iStoreOS for RK3568 with QWRT 5G

on:
  push:
    branches: [ main ]
    paths:
      - '.config'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev python3-distutils rsync unzip zlib1g-dev file wget libusb-1.0-0-dev

      - name: Configure git to bypass authentication for public repos
        run: |
          # 关键配置：强制git对GitHub的HTTPS链接不进行认证（公开仓库无需认证）
          git config --global credential.helper 'store --file /dev/null'  # 不存储凭证
          git config --global url."https://github.com/".insteadOf git@github.com:  # HTTPS优先
          git config --global url."https://".insteadOf git://  # 避免git协议问题

      - name: Clone iStoreOS source
        run: |
          git clone https://github.com/istoreos/istoreos.git --depth=1 --branch=main istoreos-src
          cd istoreos-src

      - name:彻底清理旧的feeds配置（避免冲突）
        run: |
          cd istoreos-src
          # 删除可能存在的旧feeds配置，防止干扰
          rm -f feeds.conf.default
          # 重新创建基础feeds配置（只保留iStoreOS默认源，避免自带的冲突）
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-22.03" >> feeds.conf.default
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-22.03" >> feeds.conf.default
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-22.03" >> feeds.conf.default
          echo "src-git routing https://github.com/openwrt/routing.git;openwrt-22.03" >> feeds.conf.default
          echo "src-git telephony https://github.com/openwrt/telephony.git;openwrt-22.03" >> feeds.conf.default

      - name:手动克隆QWRT和Quectel仓库（带重试机制）
        run: |
          cd istoreos-src
          mkdir -p feeds/qwrt feeds/quectel
          # 克隆QWRT仓库（带重试，避免网络波动）
          for i in {1..3}; do git clone https://github.com/qwrt-project/qwrt-packages.git --depth=1 feeds/qwrt && break || sleep 5; done
          # 克隆广和通仓库（带重试）
          for i in {1..3}; do git clone https://github.com/quectel/quectel-openwrt.git --depth=1 feeds/quectel && break || sleep 5; done
          # 关联本地feeds（确保构建系统识别）
          echo "src-link qwrt feeds/qwrt" >> feeds.conf.default
          echo "src-link quectel feeds/quectel" >> feeds.conf.default

      - name: Load custom config
        run: |
          cp ./.config istoreos-src/.config
          cd istoreos-src
          # 确保5G模组必要配置（如果.config中没有则添加）
          echo "CONFIG_PACKAGE_kmod-usb-serial=y" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-serial-qcserial=y" >> .config
          echo "CONFIG_PACKAGE_kmod-qmi-wwan=y" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y" >> .config
          echo "CONFIG_PACKAGE_modemmanager=y" >> .config
          echo "CONFIG_PACKAGE_modemmanager-ppp=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-qmi=y" >> .config
          echo "CONFIG_PACKAGE_qmi-utils=y" >> .config
          echo "CONFIG_PACKAGE_uqmi=y" >> .config
          echo "CONFIG_PACKAGE_qwrt-modem=y" >> .config
          echo "CONFIG_PACKAGE_qwrt-modem-quectel=y" >> .config

      - name: Copy custom files
        run: |
          cp -r ./files istoreos-src/
          mkdir -p istoreos-src/files/etc/modprobe.d/
          echo "options qcserial vendor=0x05c6 product=0x90b2" > istoreos-src/files/etc/modprobe.d/fm35ogl.conf

      - name: Update and install feeds
        run: |
          cd istoreos-src
          ./scripts/feeds update -a  # 此时qwrt和quectel已本地存在，仅更新其他源
          ./scripts/feeds install -a  # 安装所有包

      - name: Build firmware
        run: |
          cd istoreos-src
          make -j$(nproc) defconfig
          make -j$(nproc) download V=s
          make -j$(nproc) V=s

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-rk3568-5g-firmware
          path: istoreos-src/bin/targets/rockchip/armv8/*.img
