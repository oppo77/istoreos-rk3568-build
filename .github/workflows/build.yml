name: Build iStoreOS for RK3568

on:
  push:
    branches: [ main ]
    paths:
      - '.config'  # 只有修改.config时才触发编译
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用Ubuntu 22.04环境

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # 将仓库文件拉取到工作目录（当前目录为仓库根目录）

      - name: Install dependencies
        run: |
          sudo apt update
          # 补充编译所需依赖（原依赖基础上增加libncursesw5-dev等，避免缺失）
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev python3-distutils rsync unzip zlib1g-dev file wget

      - name: Clone iStoreOS source
        run: |
          git clone https://github.com/istoreos/istoreos.git --depth=1 --branch=main istoreos-src
          cd istoreos-src  # 克隆源码到当前目录下的istoreos-src文件夹

      - name: Load custom config
        run: |
          # 复制仓库根目录的.config到源码目录（路径正确，当前目录是仓库根目录）
          cp ./.config istoreos-src/.config

      - name: Copy custom files
        run: |
          # 复制仓库根目录的files目录到源码目录（路径修正为./files）
          cp -r ./files istoreos-src/

      - name: Update and install feeds
        run: |
          cd istoreos-src
          ./scripts/feeds update -a  # 更新软件源
          ./scripts/feeds install -a  # 安装所有软件包

      - name: Build firmware
        run: |
          cd istoreos-src
          make -j$(nproc) defconfig  # 生成默认配置（合并自定义.config）
          make -j$(nproc) download V=s  # 下载依赖包（V=s显示详细日志）
          make -j$(nproc) V=s  # 编译固件（根据CPU核心数自动分配线程）

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-rk3568-firmware
          path: istoreos-src/bin/targets/rockchip/armv8/*.img  # RK3568属于armv8架构，产物在此路径
