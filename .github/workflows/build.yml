name: Build iStoreOS for RK3568 (with FM350GL 5G)
on:
  push:
    branches: [ main ]
    paths:
      - '.config'  # 修改.config时自动触发
  workflow_dispatch:  # 允许手动触发（推荐测试用）

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      ########################################################################
      # 1. 基础准备：拉取仓库代码 + 安装依赖（原逻辑不变）
      ########################################################################
      - name: Checkout 本地配置（含.config和自定义files）
        uses: actions/checkout@v4

      - name: Install build dependencies（编译依赖）
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev \
            python3-distutils rsync unzip zlib1g-dev file wget linux-headers-$(uname -r)

      ########################################################################
      # 2. 拉取核心源码：iStoreOS + 5G-Modem-Support（原逻辑不变）
      ########################################################################
      - name: Clone iStoreOS source（克隆iStoreOS主源码）
        run: |
          git clone https://github.com/istoreos/istoreos.git --depth=1 --branch=main istoreos-src
          cd istoreos-src
          ./scripts/feeds update -n  # 初始化feeds结构

      - name: Clone 5G-Modem-Support（克隆5G驱动/工具仓库）
        run: |
          git clone https://github.com/Siriling/5G-Modem-Support.git --depth=1 5G-Modem-Support

      ########################################################################
      # 3. 集成FM350GL专属5G组件（核心修复：LUCI目录路径+提前创建目录）
      ########################################################################
      - name: Copy FM350GL驱动（Fibocom MHI/QMI驱动）
        run: |
          mkdir -p istoreos-src/package/kernel/fibocom-drivers
          cp -r 5G-Modem-Support/fibocom_MHI istoreos-src/package/kernel/fibocom-drivers/
          cp -r 5G-Modem-Support/fibocom_QMI_WWAN istoreos-src/package/kernel/fibocom-drivers/

      - name: Copy FM350GL拨号工具（fibocom-dial）
        run: |
          mkdir -p istoreos-src/package/network/utils/fibocom-dial
          cp -r 5G-Modem-Support/fibocom-dial/* istoreos-src/package/network/utils/fibocom-dial/

      # 【修复后的步骤】Copy LUCI管理界面（修正目录路径+提前创建目录）
      - name: Copy LUCI管理界面（hypermodem，修复目录问题）
        run: |
          # 1. 定义LUCI应用的正确目标目录（iStoreOS官方路径）
          LUCI_APP_DIR="istoreos-src/package/luci/applications"
          # 2. 提前创建目录（-p确保父目录不存在时也能创建，避免报错）
          mkdir -p "$LUCI_APP_DIR"
          echo "✅ 已创建LUCI应用目录：$LUCI_APP_DIR"
          
          # 3. 复制hypermodem到正确目录
          cp -r 5G-Modem-Support/luci-app-hypermodem "$LUCI_APP_DIR/"
          
          # 4. 验证复制结果（检查目录是否存在，确保复制成功）
          if [ -d "$LUCI_APP_DIR/luci-app-hypermodem" ]; then
            echo "✅ luci-app-hypermodem 复制完成"
          else
            echo "❌ luci-app-hypermodem 复制失败！"
            exit 1  # 复制失败终止流程，避免后续编译出错
          fi
          
          # 可选：需短信功能则取消注释下方代码（同样修正目录）
          # cp -r 5G-Modem-Support/luci-app-sms-tool "$LUCI_APP_DIR/"
          # if [ -d "$LUCI_APP_DIR/luci-app-sms-tool" ]; then echo "✅ 短信工具复制完成"; fi

      ########################################################################
      # 4. 编译流程（拆分步骤+日志保存，原优化逻辑不变）
      ########################################################################
      - name: Load custom config（加载配置+验证5G组件）
        run: |
          cp ./.config istoreos-src/.config
          cd istoreos-src
          if ! grep -E "fibocom|hypermodem" .config; then
            echo "⚠️ 警告：.config中未找到5G组件配置，可能导致5G功能失效！"
          fi

      - name: Copy custom files（复制自定义文件）
        run: |
          if [ -d ./files ]; then
            cp -r ./files istoreos-src/
            echo "✅ 已复制自定义files目录"
          else
            echo "ℹ️ 本地files目录不存在，跳过复制"
          fi

      - name: Update and install feeds（更新包索引）
        run: |
          cd istoreos-src
          ./scripts/feeds update -a 2>&1 | tee feeds-update.log
          ./scripts/feeds install -a 2>&1 | tee feeds-install.log

      - name: Generate defconfig（生成最终配置）
        run: |
          cd istoreos-src
          make -j4 defconfig 2>&1 | tee defconfig.log
          echo "✅ 配置生成完成"

      - name: Download dependencies（下载编译依赖）
        run: |
          cd istoreos-src
          make -j4 download V=s 2>&1 | tee download.log
          echo "✅ 依赖下载完成"

      - name: Build firmware（编译固件，4线程）
        run: |
          cd istoreos-src
          make -j4 V=s 2>&1 | tee build.log
          if [ -n "$(ls bin/targets/rockchip/armv8/*.img 2>/dev/null)" ]; then
            echo "✅ 固件编译成功！"
          else
            echo "❌ 固件编译失败！查看build.log定位问题"
            exit 1
          fi

      ########################################################################
      # 5. 上传工件：固件+完整日志（原逻辑不变）
      ########################################################################
      - name: Upload full build logs（上传完整日志）
        uses: actions/upload-artifact@v4
        with:
          name: 5g-build-logs（完整日志）
          path: |
            istoreos-src/feeds-update.log
            istoreos-src/feeds-install.log
            istoreos-src/defconfig.log
            istoreos-src/download.log
            istoreos-src/build.log
            istoreos-src/.config
          retention-days: 14

      - name: Upload firmware（上传固件）
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-rk3568-fm350gl-5g-firmware
          path: istoreos-src/bin/targets/rockchip/armv8/*.img
          retention-days: 30
