name: Build iStoreOS for xgp (RK3568 + 5G Modem)

on:
  push:
    branches: [ main ]
    paths: [ '.config', '.github/workflows/**' ]
  workflow_dispatch:

jobs:
  build-firmware:
    runs-on: ubuntu-22.04
    env:
      ISTOREOS_REPO: "https://github.com/istoreos/istoreos.git"
      ISTOREOS_BRANCH: "main"
      5G_MODEM_REPO: "https://github.com/Siriling/5G-Modem-Support.git"
      TARGET_ARCH: "rockchip/armv8"
      LOG_DIR: "build-logs"
      TERM: "xterm"  # 全局设置TERM，所有步骤继承

    steps:
      # 1. 拉取用户仓库（含.config）
      - name: Checkout user repo
        uses: actions/checkout@v4
        with:
          path: "user-repo"

      # 2. 安装依赖（关键：补全ncurses终端数据库+5G依赖）
      - name: Install full dependencies (fix terminal + 5G)
        run: |
          sudo apt update -y && sudo apt upgrade -y
          # 安装终端必需依赖（ncurses全家桶，确保terminfo数据库完整）
          sudo apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev \
            python3-distutils rsync unzip zlib1g-dev file wget curl \
            ncurses-base ncurses-bin ncurses-term terminfo  # 终端核心依赖
            libfuse-dev libtool autoconf automake
          # 验证终端配置是否存在（关键：确保xterm配置文件存在）
          if [ -f "/usr/share/terminfo/x/xterm" ]; then
            echo "✅ xterm terminal config found"
          else
            echo "❌ xterm terminal config missing, installing manually..."
            sudo apt reinstall -y ncurses-term  # 强制重装终端配置
          fi

      # 3. 克隆源码+集成5G-Modem-Support（排除rd05a1避免递归依赖）
      - name: Clone iStoreOS & integrate 5G-Modem-Support
        run: |
          git clone --depth=1 -b $ISTOREOS_BRANCH $ISTOREOS_REPO "istoreos-src"
          # 集成5G模组并删除rd05a1（之前确认的递归依赖源）
          git clone --depth=1 $5G_MODEM_REPO "istoreos-src/package/5G-Modem-Support"
          [ -d "istoreos-src/package/5G-Modem-Support/rd05a1" ] && rm -rf "$_"

      # 4. 加载配置+更新feeds（验证TERM生效）
      - name: Load config & update feeds (verify TERM)
        run: |
          # 验证TERM环境变量（必须输出xterm）
          echo "Current TERM: $TERM"
          if [ "$TERM" != "xterm" ]; then
            echo "❌ TERM not set correctly, forcing TERM=xterm"
            export TERM=xterm
          fi

          cd istoreos-src
          # 复制用户.config（覆盖默认配置）
          cp ../user-repo/.config ./.config
          # 更新feeds（排除可能冲突的包）
          ./scripts/feeds update -a && ./scripts/feeds install -a \
            --exclude=rd05a1 --exclude=kmod-rd05a1

      # 5. 编译固件（关键：强制TERM+非交互配置+线程限制）
      - name: Build firmware (force TERM + non-interactive)
        run: |
          cd istoreos-src
          mkdir -p ../$LOG_DIR

          # 1. 非交互补全依赖（silentoldconfig比olddefconfig更安静，彻底不触发交互）
          TERM=xterm make -j$(($(nproc)/2)) silentoldconfig 2>&1 | tee ../$LOG_DIR/silentoldconfig.log
          
          # 2. 下载依赖包（强制TERM）
          TERM=xterm make -j$(($(nproc)/2)) download V=s 2>&1 | tee ../$LOG_DIR/download.log
          
          # 3. 编译固件（强制TERM+限制线程，避免日志暴增）
          TERM=xterm make -j$(($(nproc)/2)) V=s 2>&1 | tee ../$LOG_DIR/build.log

      # 6. 上传产物（固件+日志）
      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-firmware (RK3568 + 5G)
          path: istoreos-src/bin/targets/${{ env.TARGET_ARCH }}/*.img
          retention-days: 30

      - name: Upload debug logs
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-build-logs
          path: ${{ env.LOG_DIR }}/*.log
          retention-days: 14
