name: Build iStoreOS for xgp (RK3568 + 5G Modem)

on:
  push:
    branches: [ main ]
    paths:
      - '.config'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-firmware:
    runs-on: ubuntu-22.04
    env:
      ISTOREOS_REPO: "https://github.com/istoreos/istoreos.git"
      ISTOREOS_BRANCH: "main"
      5G_MODEM_REPO: "https://github.com/Siriling/5G-Modem-Support.git"
      TARGET_ARCH: "rockchip/armv8"
      LOG_DIR: "build-logs"

    steps:
      # 1. 拉取用户仓库（含.config）
      - name: Checkout user repo
        uses: actions/checkout@v4
        with:
          path: "user-repo"

      # 2. 安装依赖（关键：补充终端依赖+5G核心依赖）
      - name: Install build dependencies (fix terminal + 5G)
        run: |
          sudo apt update -y && sudo apt upgrade -y
          # 安装终端依赖（terminfo库）+ 5G核心依赖
          sudo apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libncursesw5-dev libssl-dev libelf-dev \
            python3-distutils rsync unzip zlib1g-dev file wget curl \
            terminfo ncurses-term  # 终端识别必需依赖
            libfuse-dev libtool autoconf automake

      # 3. 克隆源码+集成5G-Modem-Support（关键：排除rd05a1目录）
      - name: Clone iStoreOS & integrate 5G-Modem-Support (exclude rd05a1)
        run: |
          # 克隆iStoreOS源码
          git clone --depth=1 -b $ISTOREOS_BRANCH $ISTOREOS_REPO "istoreos-src"
          
          # 集成5G-Modem-Support并删除rd05a1目录（避免自依赖包）
          git clone --depth=1 $5G_MODEM_REPO "istoreos-src/package/5G-Modem-Support"
          if [ -d "istoreos-src/package/5G-Modem-Support/rd05a1" ]; then
            rm -rf "istoreos-src/package/5G-Modem-Support/rd05a1"
            echo "Deleted rd05a1 directory to fix recursive dependency"
          fi

      # 4. 加载配置+更新feeds（关键：全局设置TERM）
      - name: Load config & update feeds (global TERM)
        run: |
          # 全局设置终端类型（所有步骤生效）
          export TERM=xterm
          echo "TERM environment set to: $TERM"
          
          cd istoreos-src
          # 复制用户.config
          cp ../user-repo/.config ./.config
          # 复制自定义files（无则忽略）
          if [ -d ../user-repo/files ]; then
            cp -r ../user-repo/files ./files
          fi
          # 更新feeds（禁用rd05a1相关包）
          ./scripts/feeds update -a && ./scripts/feeds install -a \
            --exclude=rd05a1 --exclude=kmod-rd05a1  # 明确排除rd05a1包

      # 5. 编译固件（关键：非交互+日志切割）
      - name: Build firmware (non-interactive + log split)
        run: |
          # 再次确认TERM（防止环境变量丢失）
          export TERM=xterm
          cd istoreos-src
          
          # 创建日志目录
          mkdir -p ../$LOG_DIR
          
          # 非交互补全依赖（避免menuconfig）
          make -j$(($(nproc)/2)) olddefconfig 2>&1 | tee ../$LOG_DIR/olddefconfig.log
          # 下载依赖
          make -j$(($(nproc)/2)) download V=s 2>&1 | tee ../$LOG_DIR/download.log
          # 编译（限制线程避免日志暴增）
          make -j$(($(nproc)/2)) V=s 2>&1 | tee ../$LOG_DIR/build.log

      # 6. 上传产物
      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-firmware (RK3568 + 5G)
          path: |
            istoreos-src/bin/targets/${{ env.TARGET_ARCH }}/*.img
            istoreos-src/bin/targets/${{ env.TARGET_ARCH }}/*.tar.gz
          retention-days: 30

      # 7. 上传日志（调试用）
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: istoreos-xgp-build-logs
          path: ${{ env.LOG_DIR }}/*.log
          retention-days: 14
