name: 本地编译iStoreOS-XGP（依赖修复版）

on:
  workflow_dispatch:

jobs:
  local-build:
    runs-on: self-hosted
    env:
      TARGET_PLATFORM: rockchip
      TARGET_SUBPLATFORM: rk35xx
      FIRMWARE_DIST: istoreos
      ISTOREOS_BRANCH: "istoreos-24.10"
      LOCAL_BUILD_DIR: "${{ github.workspace }}/build"
      VENV_PATH: "${LOCAL_BUILD_DIR}/python-venv"
      GITHUB_MIRROR: "https://bgithub.xyz"

    steps:
      - name: 0. 配置GitHub镜像
        run: |
          git config --global url."${{ env.GITHUB_MIRROR }}/".insteadOf "https://github.com/"

      - name: 1. 拉取仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 2. 安装系统依赖（修正反斜杠格式）
        run: |
          echo "===== 安装核心系统依赖 ====="
          # 修复：反斜杠仅用于续行，后面无空格/注释，确保没有多余字符
          REQUIRED_PACKAGES="build-essential flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev libelf-dev python3 python3-pip \
            python3-venv rsync unzip wget zlib1g-dev quilt u-boot-tools squashfs-tools \
            meson ninja-build cmake device-tree-compiler liblz4-tool \
            swig \
            python3-dev python3-setuptools \
            libncursesw5-dev"

          for pkg in $REQUIRED_PACKAGES; do
            # 跳过空项或无效字符（如反斜杠）
            if [ -z "$pkg" ] || [ "$pkg" = "\\" ]; then
              continue
            fi
            if ! dpkg -l | grep -q "$pkg"; then
              echo "安装缺失依赖：$pkg"
              sudo apt update -y
              sudo apt install -y "$pkg" || exit 1
            fi
          done

          # 验证关键工具
          if ! command -v swig &> /dev/null; then
            echo "ERROR: swig安装失败！"
            exit 1
          fi

      - name: 3. 配置Python虚拟环境（确保pyelftools）
        run: |
          echo "===== 准备虚拟环境 ====="
          mkdir -p "$(dirname ${{ env.VENV_PATH }})"
          rm -rf "${{ env.VENV_PATH }}"
          /usr/bin/python3 -m venv "${{ env.VENV_PATH }}" || exit 1

          source "${{ env.VENV_PATH }}/bin/activate" || exit 1
          pip install pyelftools --upgrade || exit 1
          if ! python3 -c "import elftools" &> /dev/null; then
            echo "ERROR: pyelftools缺失！"
            exit 1
          fi
          deactivate

      - name: 4. 克隆iStoreOS源码
        run: |
          mkdir -p ${{ env.LOCAL_BUILD_DIR }}
          cd ${{ env.LOCAL_BUILD_DIR }}
          rm -rf ${{ env.FIRMWARE_DIST }}
          git clone "${{ env.GITHUB_MIRROR }}/istoreos/istoreos.git" ${{ env.FIRMWARE_DIST }} || exit 1
          cd ${{ env.FIRMWARE_DIST }}
          git checkout ${{ env.ISTOREOS_BRANCH }} || exit 1
          git pull || exit 1

      - name: 5. 同步软件源
        run: |
          cd ${{ env.LOCAL_BUILD_DIR }}/${{ env.FIRMWARE_DIST }}
          sed -i 's#https://downloads.openwrt.org#https://mirrors.ustc.edu.cn/openwrt#g' feeds.conf.default
          sed -i '/qmodem/d' feeds.conf.default
          echo "src-git qmodem https://github.com/FUjr/QModem.git" >> feeds.conf.default
          sed -i '/baidupcs-web/d' feeds.conf.default
          ./scripts/feeds update -a -f || exit 1
          ./scripts/feeds install -a -f || exit 1

          if [ ! -d "package/feeds/qmodem/quectel-CM-5G" ] || [ ! -d "package/feeds/qmodem/quectel-cm" ]; then
            echo "ERROR: QModem依赖缺失！"
            exit 1
          fi

      - name: 6. 导入设备配置
        run: |
          cd ${{ env.LOCAL_BUILD_DIR }}/${{ env.FIRMWARE_DIST }}
          cp ${{ github.workspace }}/xgp-qmodem.config .config
          sed -i 's/CONFIG_PACKAGE_luci-app-baidupcs-web=y/# CONFIG_PACKAGE_luci-app-baidupcs-web is not set/' .config
          make defconfig || exit 1

      - name: 7. 编译
        run: |
          cd ${{ env.LOCAL_BUILD_DIR }}/${{ env.FIRMWARE_DIST }}
          source "${{ env.VENV_PATH }}/bin/activate" || exit 1
          make prereq || exit 1

          CPU_CORES=$(nproc)
          make -j$CPU_CORES V=m 2>&1 | tee build.log &
          PID=$!
          sleep 60
          while kill -0 $PID 2>/dev/null; do
            echo "===== 编译中（$(date +%H:%M:%S)）====="
            grep -E "Compiling|Linking|Installing" build.log | tail -5
            sleep 600
          done
          wait $PID

          deactivate
          FIRMWARE_DIR="bin/targets/$TARGET_PLATFORM/$TARGET_SUBPLATFORM"
          if [ ! -d "$FIRMWARE_DIR" ] || [ -z "$(ls $FIRMWARE_DIR/*.sysupgrade.bin 2>/dev/null)" ]; then
            cat build.log | tail -1000
            exit 1
          fi

      - name: 8. 打包产物
        run: |
          LOCAL_OUTPUT="${{ github.workspace }}/local-firmware"
          mkdir -p $LOCAL_OUTPUT
          cp -r ${{ env.LOCAL_BUILD_DIR }}/${{ env.FIRMWARE_DIST }}/bin/targets/$TARGET_PLATFORM/$TARGET_SUBPLATFORM/* $LOCAL_OUTPUT/
          cp ${{ env.LOCAL_BUILD_DIR }}/${{ env.FIRMWARE_DIST }}/build.log $LOCAL_OUTPUT/
          echo "产物路径：$LOCAL_OUTPUT"
