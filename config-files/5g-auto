#!/bin/bash
LOG_TAG="5G-AUTO"

# 1. 全自动识别5G模块串口（FM350gl通常为ttyUSB0~ttyUSB3）
find_5g_serial() {
    logger -t $LOG_TAG "开始识别5G模块串口..."
    SERIAL_PORTS=$(ls /dev/ttyUSB* 2>/dev/null)
    if [ -z "$SERIAL_PORTS" ]; then
        logger -t $LOG_TAG "错误：未找到USB串口设备！"
        return 1
    fi
    # 验证串口是否为5G模块（发送AT+CGMI匹配广和通）
    for PORT in $SERIAL_PORTS; do
        logger -t $LOG_TAG "验证串口：$PORT"
        AT_RESP=$(screen -L -Logfile /tmp/at_log -d -m -S at_test $PORT 115200 \
            && sleep 1 && echo -e "AT+CGMI\r" > /dev/$PORT && sleep 2 \
            && cat /tmp/at_log | grep "Quectel\|Simcom\|Ublox\|ZTE\|Fibocom" 2>/dev/null)
        if [ -n "$AT_RESP" ]; then
            logger -t $LOG_TAG "成功识别串口：$PORT（厂商：$AT_RESP）"
            echo "$PORT"
            rm -f /tmp/at_log
            return 0
        fi
        rm -f /tmp/at_log
    done
    logger -t $LOG_TAG "错误：未找到有效5G串口！"
    return 1
}

# 2. 自动识别运营商并匹配APN（FM350gl支持ModemManager）
get_auto_apn() {
    logger -t $LOG_TAG "识别运营商..."
    # 等待ModemManager加载（FM350gl初始化需5秒）
    for ((i=0; i<10; i++)); do
        MODEM_PATH=$(mmcli -L | grep "modem" | awk '{print $1}' 2>/dev/null)
        if [ -n "$MODEM_PATH" ]; then break; fi
        sleep 1
    done
    if [ -z "$MODEM_PATH" ]; then
        logger -t $LOG_TAG "错误：ModemManager未识别FM350gl！"
        return 1
    fi
    # 获取IMSI（判断运营商）
    IMSI=$(mmcli -m $MODEM_PATH --command="AT+CIMI" | grep -oE "[0-9]{15,17}" 2>/dev/null)
    if [ -z "$IMSI" ]; then
        logger -t $LOG_TAG "错误：无法获取SIM卡IMSI！"
        return 1
    fi
    # 匹配运营商（移动46000/联通46001/电信46003）
    MCC=${IMSI:0:3}
    MNC=${IMSI:3:2}
    case "$MCC$MNC" in
        46000|46002|46007) echo "cmnet"; logger -t $LOG_TAG "识别为中国移动";;
        46001|46006) echo "3gnet"; logger -t $LOG_TAG "识别为中国联通";;
        46003|46005|46011) echo "ctnet"; logger -t $LOG_TAG "识别为中国电信";;
        *) echo "__5G_APN__"; logger -t $LOG_TAG "未知运营商，用默认APN";;
    esac
    return 0
}

# 3. 5G拨号（QMI协议，适配FM350gl）
start_5g_modem() {
    local SERIAL_PORT=$1
    local AUTO_APN=$2
    logger -t $LOG_TAG "5G拨号（串口：$SERIAL_PORT，APN：$AUTO_APN）..."
    # 停止现有连接
    ifconfig wwan0 down 2>/dev/null
    pppd kill 2>/dev/null
    # QMI拨号（FM350gl优先用此方式）
    qmicli -d /dev/cdc-wdm0 --device-open-net="net-raw-ip|net-no-qos-header" --wds-start-network="$AUTO_APN" --client-no-release-cid
    if [ $? -ne 0 ]; then
        logger -t $LOG_TAG "QMI拨号失败，尝试PPPD..."
        # 备用PPPD拨号
        cat > /tmp/ppp_options << EOF
/dev/$SERIAL_PORT
115200
crtscts
modem
defaultroute
noipdefault
usepeerdns
apn $AUTO_APN
EOF
        pppd file /tmp/ppp_options &
        sleep 5
    fi
    # 验证拨号成功
    for ((i=0; i<10; i++)); do
        WWAN_IP=$(ip addr show wwan0 | grep "inet " | awk '{print $2}' 2>/dev/null)
        if [ -n "$WWAN_IP" ]; then
            logger -t $LOG_TAG "5G拨号成功！wwan0 IP：$WWAN_IP"
            rm -f /tmp/ppp_options
            return 0
        fi
        sleep 2
    done
    logger -t $LOG_TAG "错误：5G拨号失败！"
    return 1
}

# 4. 网口转发配置（5G→LAN，适配2个千兆网口）
config_net_forward() {
    logger -t $LOG_TAG "配置网口转发..."
    # 启用IP转发
    echo 1 > /proc/sys/net/ipv4/ip_forward
    echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
    sysctl -p 2>/dev/null
    # 识别LAN口（xgp通常为eth0/eth1，取非DOWN的接口）
    LAN_PORT=$(ip link show | grep -E "eth[0-9]" | grep -v "DOWN" | head -1 | awk '{print $2}' | sed 's/://' 2>/dev/null)
    LAN_PORT=${LAN_PORT:-"eth0"}  #  fallback
    logger -t $LOG_TAG "识别LAN口：$LAN_PORT"
    # OpenWRT防火墙转发（WAN→LAN）
    uci set firewall.@zone[1].forward='ACCEPT'
    uci set firewall.@forwarding[0]='forwarding'
    uci set firewall.@forwarding[0].src='wan'
    uci set firewall.@forwarding[0].dest='lan'
    uci commit firewall
    /etc/init.d/firewall restart
    # iptables NAT转发（确保LAN设备上网）
    iptables -t nat -A POSTROUTING -o wwan0 -j MASQUERADE
    iptables -A FORWARD -i $LAN_PORT -o wwan0 -j ACCEPT
    iptables -A FORWARD -i wwan0 -o $LAN_PORT -m state --state RELATED,ESTABLISHED -j ACCEPT
    logger -t $LOG_TAG "网口转发配置完成"
    return 0
}

# 5. 自动启用WiFi（MT7916的2.4G/5G）
auto_enable_wifi() {
    logger -t $LOG_TAG "启用WiFi..."
    # 验证WiFi硬件（radio0=2.4G，radio1=5G）
    RADIOS=$(iw list | grep "phy#" | wc -l)
    if [ $RADIOS -eq 0 ]; then
        logger -t $LOG_TAG "未检测到WiFi硬件！"
        return 0
    fi
    # 重启WiFi服务（应用SSID/密码配置）
    uci commit wireless
    /etc/init.d/wpad restart
    sleep 3
    # 验证WiFi状态
    WIFI_SSIDS=$(iw dev | grep "ssid" | awk '{print $2}')
    if [ -n "$WIFI_SSIDS" ]; then
        logger -t $LOG_TAG "WiFi已启用，SSID：$WIFI_SSIDS"
    else
        logger -t $LOG_TAG "警告：WiFi未检测到SSID！"
    fi
    return 0
}

# 主流程（失败后重试1次）
main() {
    logger -t $LOG_TAG "===== 智能5G启动脚本开始 ====="
    SERIAL_PORT=$(find_5g_serial) || exit 1
    AUTO_APN=$(get_auto_apn) || exit 1
    start_5g_modem "$SERIAL_PORT" "$AUTO_APN" || exit 1
    config_net_forward
    auto_enable_wifi
    logger -t $LOG_TAG "===== 智能脚本执行完成 ====="
}
main || (logger -t $LOG_TAG "首次失败，30秒后重试..." && sleep 30 && main)
